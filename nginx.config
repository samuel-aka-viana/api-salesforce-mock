# =============================================================================
# MARKETING CLOUD API - CONFIGURAÇÃO NGINX
# Proxy reverso para produção
# =============================================================================

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Configurações básicas
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Configurações de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10m;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Log format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Upstream para a aplicação Flask
    upstream marketing_cloud_api {
        least_conn;
        server api:5000 max_fails=3 fail_timeout=30s;
        # Adicionar mais instâncias se necessário:
        # server api2:5000 max_fails=3 fail_timeout=30s;
        # server api3:5000 max_fails=3 fail_timeout=30s;
    }

    # Configuração do servidor principal
    server {
        listen 80;
        server_name marketing-cloud-api.local localhost;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';";

        # Health check endpoint (não passa pelo rate limiting)
        location /health {
            proxy_pass http://marketing_cloud_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;

            access_log off;
        }

        # Authentication endpoints com rate limiting específico
        location ~ ^/v1/auth/ {
            limit_req zone=auth burst=10 nodelay;

            proxy_pass http://marketing_cloud_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Upload de assets (limite maior de arquivo)
        location ~ ^/assets/v1/assets$ {
            limit_req zone=api burst=20 nodelay;
            client_max_body_size 20m;

            proxy_pass http://marketing_cloud_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts maiores para upload
            proxy_connect_timeout 30s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Download de assets (cache agressivo)
        location ~ ^/assets/v1/assets/download/ {
            proxy_pass http://marketing_cloud_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Cache para assets
            proxy_cache_valid 200 1h;
            proxy_cache_valid 404 1m;
            add_header X-Cache-Status $upstream_cache_status;

            # Headers para cache do browser
            expires 1h;
            add_header Cache-Control "public, no-transform";
        }

        # Endpoints de API principais
        location ~ ^/(v1|contacts|campaigns|email|data|assets)/ {
            limit_req zone=api burst=50 nodelay;

            proxy_pass http://marketing_cloud_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }

        # Fallback para outras rotas
        location / {
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://marketing_cloud_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Status stub para monitoramento
        location /nginx_status {
            stub_status;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Rede Docker
            deny all;
            access_log off;
        }

        # Negar acesso a arquivos sensíveis
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # Configuração HTTPS (descomente para usar SSL)
    # server {
    #     listen 443 ssl http2;
    #     server_name marketing-cloud-api.local;
    #
    #     ssl_certificate /etc/ssl/certs/marketing_cloud.crt;
    #     ssl_certificate_key /etc/ssl/private/marketing_cloud.key;
    #
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #
    #     # Usar as mesmas configurações do server HTTP
    #     include /etc/nginx/conf.d/api_locations.conf;
    # }

    # Redirect HTTP para HTTPS (descomente para usar SSL)
    # server {
    #     listen 80;
    #     server_name marketing-cloud-api.local;
    #     return 301 https://$server_name$request_uri;
    # }
}